val centers = Val[Double]
val hierarchy = Val[Double]
val maxRadiusRate = Val[Double]
val width = Val[Double]
val hwRatio = Val[Double]
val replication = Val[Long]

val moran=Val[Double]
val distance=Val[Double]
val entropy=Val[Double]
val slope=Val[Double]

// Model
val model =
  ScalaTask(
    """
      |import org.openmole.spatialdata.application.mesobench._
      |val (moran,distance,entropy,slope) = ExpMixtureModel(input.width,input.hwRatio*input.width,input.centers,input.hierarchy,input.maxRadiusRate,input.replication).runModel
    """.stripMargin
  ) set (
    plugins += pluginsOf[org.openmole.spatialdata.application.mesobench.ExpMixtureModel],
    (inputs,outputs) += (centers,hierarchy,maxRadiusRate,width,hwRatio,replication),
    outputs += (moran,distance,entropy,slope)
  )

//val purpose = "TEST_PSE_EXPMIXTURE"
val purpose = "PSE_EXPMIXTURE"

val resdir = ((new java.text.SimpleDateFormat("yyyyMMdd_HHmm")).format(new java.util.Date()))+"_"+purpose

val grid = EGIEnvironment("vo.complex-systems.eu")

PSEEvolution(
  evaluation =  model,
  parallelism = 200,
  termination = 20000,
  genome = Seq(
    centers in (1.0, 100.0),
    hierarchy in (0.01,5.0),
    maxRadiusRate in (0.01,2.0),
    width in (50.0,100.0),
    hwRatio in (0.5,2.0)
  ),
  objective = Seq(
    moran in (-1.0 to 1.0 by 0.05),
    distance in (0.0 to 2.0 by 0.05),
    entropy in (0.0 to 1.0 by 0.05),
    slope in (-4.0 to 0.0 by 0.05)
  ),
  stochastic = Stochastic(seed = replication),
  distribution = Island(15 minutes)
) on grid hook (workDirectory / "pse" / resdir , frequency = 1000)
